name: Release

on:
  release:
    types: published

jobs:
  ubuntu:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Install
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
          sudo apt update
          sudo apt install g++-10
          wget -q https://github.com/google/googletest/archive/release-1.10.0.zip
          unzip -q release-1.10.0.zip
          cd googletest-release-1.10.0
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_GMOCK=OFF \
          -DBUILD_SHARED_LIBS=ON -Dgtest_build_tests=OFF
          cmake --build build --config Release -j$(nproc)
          sudo cmake --build build --config Release --target install
        env:
          CC: gcc-10
          CXX: g++-10

      - name: Configure
        run: cmake -S . -B build
        env:
          CC: gcc-10
          CXX: g++-10

      - name: Build
        run: cmake --build build --config Release -j$(nproc)

      - name: Create archive
        run: |
          mkdir bin
          cp build/test-program build/test-program-gtest build/liblibtest-program.so bin
          cp /usr/local/lib/libgtest.so bin
          zip cpp-template-linux.zip bin/*

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: cpp-template-linux.zip
          asset_name: cpp-template-linux.zip
          asset_content_type: application/zip

  # TODO check
  macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install
        run: |
          wget -q https://github.com/google/googletest/archive/release-1.10.0.zip
          unzip -q release-1.10.0.zip
          cd googletest-release-1.10.0
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_GMOCK=OFF \
          -DBUILD_SHARED_LIBS=ON -Dgtest_build_tests=OFF
          cmake --build build --config Release -j`sysctl -n hw.ncpu`
          sudo cmake --build build --config Release --target install

      - name: Configure
        run: cmake -S . -B build

      - name: Build
        run: cmake --build build --config Release -j`sysctl -n hw.ncpu`
        env:
          C_INCLUDE_PATH: /usr/local/include
          CPLUS_INCLUDE_PATH: /usr/local/include

      - name: Create archive
        run: |
          mkdir bin
          cp build/test-program build/test-program-gtest build/liblibtest-program.dylib bin
          cp /usr/local/lib/libgtest.dylib bin
          zip cpp-template-macos.zip bin/*

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: cpp-template-macos.zip
          asset_name: cpp-template-macos.zip
          asset_content_type: application/zip
