name: Install

on: [push, pull_request]

jobs:
  ubuntu:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        config:
          - { name: "GCC", cc: "gcc-10", cxx: "g++-10" }
          - { name: "Clang", cc: "clang-10", cxx: "clang++-10" }

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
          sudo apt update
          sudo apt install gcc-10 g++-10

      - name: Configure
        run: cmake -S . -B build
        env:
          CC: gcc-10
          CXX: g++-10

      - name: Build
        run: cmake --build build --config Release -j$(nproc)

      - name: Install
        run: sudo cmake --build build --config Release --target install

      - name: Run
        run: test-program

      - name: Install test
        run: |
          cd test_project
          cmake -S . -B build
          cmake --build build --config Release -j$(nproc)
          ./build/test-project
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}

  ubuntu-shared:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        config:
          - { name: "GCC", cc: "gcc-10", cxx: "g++-10" }
          - { name: "Clang", cc: "clang-10", cxx: "clang++-10" }

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
          sudo apt update
          sudo apt install gcc-10 g++-10

      - name: Configure
        run: cmake -S . -B build -DBUILD_SHARED=ON
        env:
          CC: gcc-10
          CXX: g++-10

      - name: Build
        run: cmake --build build --config Release -j$(nproc)

      - name: Install
        run: sudo cmake --build build --config Release --target install

      - name: Run
        run: sudo ldconfig ; test-program

      - name: Install test
        run: |
          cd test_project
          cmake -S . -B build
          cmake --build build --config Release -j$(nproc)
          ./build/test-project
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}

  macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Configure
        run: cmake -S . -B build

      - name: Build
        run: cmake --build build --config Release -j`sysctl -n hw.ncpu`
        env:
          C_INCLUDE_PATH: /usr/local/include
          CPLUS_INCLUDE_PATH: /usr/local/include

      - name: Install
        run: sudo cmake --build build --config Release --target install

      - name: Run
        run: test-program

      - name: Install test
        run: |
          cd test_project
          cmake -S . -B build
          cmake --build build --config Release -j`sysctl -n hw.ncpu`
          ./build/test-project
        env:
          C_INCLUDE_PATH: /usr/local/include
          CPLUS_INCLUDE_PATH: /usr/local/include

  macos-shared:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Configure
        run: cmake -S . -B build -DBUILD_SHARED=ON

      - name: Build
        run: cmake --build build --config Release -j`sysctl -n hw.ncpu`
        env:
          C_INCLUDE_PATH: /usr/local/include
          CPLUS_INCLUDE_PATH: /usr/local/include

      - name: Install
        run: sudo cmake --build build --config Release --target install

      - name: Run
        run: test-program

      - name: Install test
        run: |
          cd test_project
          cmake -S . -B build
          cmake --build build --config Release -j`sysctl -n hw.ncpu`
          ./build/test-project
        env:
          C_INCLUDE_PATH: /usr/local/include
          CPLUS_INCLUDE_PATH: /usr/local/include
