name: CodeQL

on: [push, pull_request]

jobs:
  ubuntu:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        compiler: [g++-10, clang++-10]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          config-file: ./.github/codeql/codeql_config.yml

      - name: Install
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
          sudo apt update
          sudo apt install g++-10 clang llvm
          wget https://github.com/google/googletest/archive/release-1.10.0.zip
          unzip release-1.10.0.zip
          cd googletest-release-1.10.0
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_GMOCK=OFF \
          -DBUILD_SHARED_LIBS=ON -Dgtest_build_tests=OFF
          cmake --build build --config Release -j$(nproc)
          sudo cmake --build build --config Release --target install
        env:
          CC: /usr/bin/gcc-10
          CXX: /usr/bin/g++-10

      - name: Configure
        run: cmake -S . -B build

      - name: Build
        run: cmake --build build --config Release -j$(nproc)
        env:
          CXX: ${{ matrix.compiler }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  macos:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          config-file: ./.github/codeql/codeql_config.yml

      - name: Install
        run: |
          brew update
          wget https://github.com/google/googletest/archive/release-1.10.0.zip
          unzip release-1.10.0.zip
          cd googletest-release-1.10.0
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_GMOCK=OFF \
          -DBUILD_SHARED_LIBS=ON -Dgtest_build_tests=OFF
          cmake --build build --config Release -j`sysctl -n hw.ncpu`
          sudo cmake --build build --config Release --target install

      - name: Configure
        run: cmake -S . -B build

      - name: Build
        run: cmake --build build --config Release -j`sysctl -n hw.ncpu`
        env:
          C_INCLUDE_PATH: /usr/local/include
          CPLUS_INCLUDE_PATH: /usr/local/include

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          config-file: ./.github/codeql/codeql_config.yml

      - name: Install
        run: |
          vcpkg install gtest:x64-windows
          vcpkg integrate install

      - name: Configure
        run: cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build
        run: cmake --build build --config Release -j((wmic cpu get NumberOfLogicalProcessors/Format:List) -replace '\D+(\d+)','$1') -- /p:VcpkgEnabled=true

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
