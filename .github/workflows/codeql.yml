name: CodeQL

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 1 * *"

jobs:
  ubuntu:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        config:
        - { name: "GCC", cc: "gcc-10", cxx: "g++-10" }
        - { name: "Clang", cc: "clang-10", cxx: "clang++-10" }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          config-file: ./.github/codeql/codeql_config.yml

      - name: Install
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
          sudo apt update
          sudo apt install g++-10

      - name: Configure
        run: cmake -S . -B build
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}

      - name: Build
        run: cmake --build build --config Release -j$(nproc)

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  macos:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          config-file: ./.github/codeql/codeql_config.yml

      - name: Configure
        run: cmake -S . -B build

      - name: Build
        run: cmake --build build --config Release -j`sysctl -n hw.ncpu`
        env:
          C_INCLUDE_PATH: /usr/local/include
          CPLUS_INCLUDE_PATH: /usr/local/include

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
