name: Clang-Tidy

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 1 * *"

jobs:
  linux:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: dependencies
          key: ${{ runner.os }}-dependencies-20201006-2

      - name: Build and install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: sudo bash ./scripts/build-install.sh

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit == 'true'
        run: sudo bash ./scripts/install.sh

      - name: Configure
        run: cmake -S . -B build -DKLIB_CLANG_TIDY=ON
        env:
          CC: gcc-10
          CXX: g++-10

      - name: Build
        run: cmake --build build --config Release -j$(nproc)

  macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: dependencies
          key: ${{ runner.os }}-dependencies-20201006-2

      - name: Build and install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: sudo bash ./scripts/build-install.sh

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit == 'true'
        run: sudo bash ./scripts/install.sh

      - name: Configure
        run: cmake -S . -B build -DKLIB_CLANG_TIDY=ON

      - name: Build
        run: cmake --build build --config Release -j`sysctl -n hw.ncpu`
        env:
          C_INCLUDE_PATH: /usr/local/include
          CPLUS_INCLUDE_PATH: /usr/local/include
