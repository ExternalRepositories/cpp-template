name: Coverage

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 1 * *"

jobs:
  ubuntu:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        config:
          - { name: "GCC", cc: "gcc-10", cxx: "g++-10" }
          - { name: "Clang", cc: "clang-10", cxx: "clang++-10" }

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
          sudo apt update
          sudo apt install gcc-10 g++-10 llvm
          wget -q https://github.com/google/googletest/archive/release-1.10.0.zip
          unzip -q release-1.10.0.zip
          cd googletest-release-1.10.0
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_GMOCK=OFF \
          -DBUILD_SHARED_LIBS=ON -Dgtest_build_tests=OFF
          cmake --build build --config Release -j$(nproc)
          sudo cmake --build build --config Release --target install
          cd ..
          wget -q https://github.com/linux-test-project/lcov/archive/v1.15.zip
          unzip -q v1.15.zip
          cd lcov-1.15
          sudo make install
        env:
          CC: gcc-10
          CXX: g++-10

      - name: Configure
        run: cmake -S . -B build -DBUILD_TESTING=ON -DCOVERAGE=ON -DCMAKE_BUILD_TYPE=Debug
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}

      - name: Build
        run: cmake --build build --config Debug -j$(nproc) --target coverage

      - name: Coveralls
        if: ${{ matrix.config.cxx == 'clang++-10' }}
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: build/lcov.info

      - name: Upload artifact
        if: ${{ matrix.config.cxx == 'g++-10' }}
        uses: actions/upload-artifact@v2
        with:
          name: coverage-linux-gcc
          path: build/coverage
          if-no-files-found: error

  macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          ln -s "$(brew --prefix llvm)/bin/llvm-profdata" "/usr/local/bin/llvm-profdata"
          ln -s "$(brew --prefix llvm)/bin/llvm-cov" "/usr/local/bin/llvm-cov"
          wget -q https://github.com/google/googletest/archive/release-1.10.0.zip
          unzip -q release-1.10.0.zip
          cd googletest-release-1.10.0
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_GMOCK=OFF \
          -DBUILD_SHARED_LIBS=ON -Dgtest_build_tests=OFF
          cmake --build build --config Release -j`sysctl -n hw.ncpu`
          sudo cmake --build build --config Release --target install

      - name: Configure
        run: cmake -S . -B build -DBUILD_TESTING=ON -DCOVERAGE=ON -DCMAKE_BUILD_TYPE=Debug

      - name: Build
        run: cmake --build build --config Debug -j`sysctl -n hw.ncpu` --target coverage
        env:
          C_INCLUDE_PATH: /usr/local/include
          CPLUS_INCLUDE_PATH: /usr/local/include

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage-macos
          path: build/coverage
          if-no-files-found: error
