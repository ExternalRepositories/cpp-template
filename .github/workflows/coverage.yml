name: Coverage

on: [push, pull_request]

jobs:
  archlinux:
    runs-on: ubuntu-latest
    container: archlinux
    strategy:
      matrix:
        compiler: [g++, clang++]

    steps:
      - uses: actions/checkout@v2

      - name: Install
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm base-devel clang lld llvm cmake gtest wget unzip
          wget https://github.com/linux-test-project/lcov/archive/v1.15.zip
          unzip lcov-1.15.zip
          cd lcov-1.15
          make install

      - name: Configure
        run: cmake -S . -B build -DCOVERAGE=ON -DCMAKE_BUILD_TYPE=Debug
        env:
          CXX: ${{ matrix.compiler }}

      - name: Build
        run: cmake --build build --config Debug -j$(nproc) --target coverage

      - name: Coveralls
        if: ${{ matrix.compiler == 'clang++' }}
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: build/lcov.info

  macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install
        run: |
          brew update
          ln -s "$(brew --prefix llvm)/bin/llvm-profdata" "/usr/local/bin/llvm-profdata"
          ln -s "$(brew --prefix llvm)/bin/llvm-cov" "/usr/local/bin/llvm-cov"
          wget https://github.com/google/googletest/archive/release-1.10.0.zip
          unzip release-1.10.0.zip
          cd googletest-release-1.10.0
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release -j`sysctl -n hw.ncpu`
          sudo cmake --build build --config Release --target install

      - name: Configure
        run: cmake -S . -B build -DCOVERAGE=ON -DCMAKE_BUILD_TYPE=Debug

      - name: Build
        run: cmake --build build --config Debug -j`sysctl -n hw.ncpu` --target coverage
        env:
          C_INCLUDE_PATH: /usr/local/include
          CPLUS_INCLUDE_PATH: /usr/local/include
