name: Sanitizers

on: [push, pull_request]

jobs:
  address:
    runs-on: ubuntu-latest
    container: archlinux
    strategy:
      matrix:
        compiler: [g++, clang++]

    steps:
      - uses: actions/checkout@v2

      - name: Install
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm base-devel clang lld cmake gtest

      - name: Configure
        run: cmake -S . -B build -DSANITIZER=Address
        env:
          CXX: ${{ matrix.compiler }}

      - name: Build
        run: cmake --build build -j$(nproc)

      - name: Test
        run: cd build ; ctest -j$(nproc) --output-on-failure

  thread:
    runs-on: ubuntu-latest
    container: archlinux
    strategy:
      matrix:
        compiler: [g++, clang++]

    steps:
      - uses: actions/checkout@v2

      - name: Install
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm base-devel clang lld cmake gtest

      - name: Configure
        run: cmake -S . -B build -DSANITIZER=Thread
        env:
          CXX: ${{ matrix.compiler }}

      - name: Build
        run: cmake --build build -j$(nproc)

      - name: Test
        run: cd build ; ctest -j$(nproc) --output-on-failure

  undefined:
    runs-on: ubuntu-latest
    container: archlinux
    strategy:
      matrix:
        compiler: [g++, clang++]

    steps:
      - uses: actions/checkout@v2

      - name: Install
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm base-devel clang lld cmake gtest

      - name: Configure
        run: cmake -S . -B build -DSANITIZER=Undefined
        env:
          CXX: ${{ matrix.compiler }}

      - name: Build
        run: cmake --build build -j$(nproc)

      - name: Test
        run: cd build ; ctest -j$(nproc) --output-on-failure
