name: CI

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 1 * *"

jobs:
  ubuntu:
    # TODO use ubuntu-latest
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        c_compiler: [gcc-10, clang-10]
        cxx_compiler: [g++-10, clang++-10]

    steps:
      - uses: actions/checkout@v2

      - name: Install
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
          sudo apt update
          sudo apt install g++-10
          wget -q https://github.com/google/googletest/archive/release-1.10.0.zip
          unzip -q release-1.10.0.zip
          cd googletest-release-1.10.0
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_GMOCK=OFF \
          -DBUILD_SHARED_LIBS=ON -Dgtest_build_tests=OFF
          cmake --build build --config Release -j$(nproc)
          sudo cmake --build build --config Release --target install
        env:
          CC: gcc-10
          CXX: g++-10

      - name: Configure
        run: cmake -S . -B build
        env:
          CC: ${{ matrix.c_compiler }}
          CXX: ${{ matrix.cxx_compiler }}

      - name: Build
        run: cmake --build build --config Release -j$(nproc)

      - name: Test
        run: cd build ; ctest -C Release -j$(nproc) --output-on-failure

  macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install
        run: |
          wget -q https://github.com/google/googletest/archive/release-1.10.0.zip
          unzip -q release-1.10.0.zip
          cd googletest-release-1.10.0
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_GMOCK=OFF \
          -DBUILD_SHARED_LIBS=ON -Dgtest_build_tests=OFF
          cmake --build build --config Release -j`sysctl -n hw.ncpu`
          sudo cmake --build build --config Release --target install

      - name: Configure
        run: cmake -S . -B build

      - name: Build
        run: cmake --build build --config Release -j`sysctl -n hw.ncpu`
        env:
          C_INCLUDE_PATH: /usr/local/include
          CPLUS_INCLUDE_PATH: /usr/local/include

      - name: Test
        run: cd build ; ctest -C Release -j`sysctl -n hw.ncpu` --output-on-failure
