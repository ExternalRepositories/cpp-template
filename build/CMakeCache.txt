# This is the CMakeCache file.
# For build in directory: /home/kaiser/cpp-template/build
# It was generated by CMake: /usr/local/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Enable benchmarking
BENCHMARK:BOOL=ON

//Build test suite
BUILD_TESTING:BOOL=ON

//Path to a program.
CLANG_FORMAT_PATH:FILEPATH=/usr/bin/clang-format

//Analyze code with clang-tidy
CLANG_TIDY:BOOL=OFF

//Path to a program.
CMAKE_ADDR2LINE:FILEPATH=/bin/addr2line

//Path to a program.
CMAKE_AR:FILEPATH=/bin/ar

//No help, variable specified on the command line.
CMAKE_BUILD_TYPE:STRING=Debug

//No help, variable specified on the command line.
CMAKE_CXX_COMPILER:FILEPATH=/bin/clang++-10

//LLVM archiver
CMAKE_CXX_COMPILER_AR:FILEPATH=/usr/lib/llvm-10/bin/llvm-ar

//Generate index for LLVM archive
CMAKE_CXX_COMPILER_RANLIB:FILEPATH=/usr/lib/llvm-10/bin/llvm-ranlib

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//No help, variable specified on the command line.
CMAKE_C_COMPILER:FILEPATH=/bin/clang-10

//LLVM archiver
CMAKE_C_COMPILER_AR:FILEPATH=/usr/lib/llvm-10/bin/llvm-ar

//Generate index for LLVM archive
CMAKE_C_COMPILER_RANLIB:FILEPATH=/usr/lib/llvm-10/bin/llvm-ranlib

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Path to a program.
CMAKE_DLLTOOL:FILEPATH=/bin/llvm-dlltool

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//No help, variable specified on the command line.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE

//Path to a program.
CMAKE_FORMAT_PATH:FILEPATH=/home/kaiser/.local/bin/cmake-format

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Path to a program.
CMAKE_LINKER:FILEPATH=/bin/ld

//Program used to build from build.ninja files.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/local/bin/ninja

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/bin/objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/bin/objdump

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=cpp-template

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=0.1.0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=1

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//Path to a program.
CMAKE_RANLIB:FILEPATH=/bin/ranlib

//Path to a program.
CMAKE_READELF:FILEPATH=/bin/readelf

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/bin/strip

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Build test suite with coverage information
COVERAGE:BOOL=ON

//Format code
FORMAT:BOOL=ON

//Path to a file.
GTEST_INCLUDE_DIR:PATH=/usr/local/include

//Path to a library.
GTEST_LIBRARY:FILEPATH=/usr/local/lib/libgtest.so

//Path to a library.
GTEST_LIBRARY_DEBUG:FILEPATH=GTEST_LIBRARY_DEBUG-NOTFOUND

//Path to a library.
GTEST_MAIN_LIBRARY:FILEPATH=/usr/local/lib/libgtest_main.so

//Path to a library.
GTEST_MAIN_LIBRARY_DEBUG:FILEPATH=GTEST_MAIN_LIBRARY_DEBUG-NOTFOUND

//Path to a program.
LLVM_COV_PATH:FILEPATH=/usr/bin/llvm-cov

//Path to a program.
LLVM_PROFDATA_PATH:FILEPATH=/usr/bin/llvm-profdata

//Build with a sanitizer. Options are: Address, Thread, Memory,
// Undefined and Address;Undefined
SANITIZER:STRING=Address;Undefined

//Use libc++
USE_LIBCXX:BOOL=OFF

//Execute test suite with Valgrind
VALGRIND:BOOL=OFF

//The directory containing a CMake configuration file for benchmark.
benchmark_DIR:PATH=/usr/local/lib/cmake/benchmark

//Value Computed by CMake
cpp-template_BINARY_DIR:STATIC=/home/kaiser/cpp-template/build

//Value Computed by CMake
cpp-template_SOURCE_DIR:STATIC=/home/kaiser/cpp-template


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CMAKE_ADDR2LINE
CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/home/kaiser/cpp-template/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=18
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=3
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/local/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/local/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/local/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_AR
CMAKE_CXX_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_RANLIB
CMAKE_CXX_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_AR
CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DLLTOOL
CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Ninja
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Test CMAKE_HAVE_LIBC_PTHREAD
CMAKE_HAVE_LIBC_PTHREAD:INTERNAL=1
//Have include pthread.h
CMAKE_HAVE_PTHREAD_H:INTERNAL=1
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/home/kaiser/cpp-template
//Install .so files without execute permission.
CMAKE_INSTALL_SO_NO_EXE:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_READELF
CMAKE_READELF-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/local/share/cmake-3.18
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Details about finding GTest
FIND_PACKAGE_MESSAGE_DETAILS_GTest:INTERNAL=[/usr/local/lib/libgtest.so][/usr/local/include][/usr/local/lib/libgtest_main.so][v()]
//ADVANCED property for variable: GTEST_INCLUDE_DIR
GTEST_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GTEST_LIBRARY
GTEST_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GTEST_LIBRARY_DEBUG
GTEST_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GTEST_MAIN_LIBRARY
GTEST_MAIN_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GTEST_MAIN_LIBRARY_DEBUG
GTEST_MAIN_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//Test HAVE_FLAG_FCOVERAGE_MAPPING_C
HAVE_FLAG_FCOVERAGE_MAPPING_C:INTERNAL=1
//Test HAVE_FLAG_FCOVERAGE_MAPPING_CXX
HAVE_FLAG_FCOVERAGE_MAPPING_CXX:INTERNAL=1
//Test HAVE_FLAG_FNO_OMIT_FRAME_POINTER_C
HAVE_FLAG_FNO_OMIT_FRAME_POINTER_C:INTERNAL=1
//Test HAVE_FLAG_FNO_OMIT_FRAME_POINTER_CXX
HAVE_FLAG_FNO_OMIT_FRAME_POINTER_CXX:INTERNAL=1
//Test HAVE_FLAG_FNO_OPTIMIZE_SIBLING_CALLS_C
HAVE_FLAG_FNO_OPTIMIZE_SIBLING_CALLS_C:INTERNAL=1
//Test HAVE_FLAG_FNO_OPTIMIZE_SIBLING_CALLS_CXX
HAVE_FLAG_FNO_OPTIMIZE_SIBLING_CALLS_CXX:INTERNAL=1
//Test HAVE_FLAG_FNO_SANITIZE_RECOVER_ALL_C
HAVE_FLAG_FNO_SANITIZE_RECOVER_ALL_C:INTERNAL=1
//Test HAVE_FLAG_FNO_SANITIZE_RECOVER_ALL_CXX
HAVE_FLAG_FNO_SANITIZE_RECOVER_ALL_CXX:INTERNAL=1
//Test HAVE_FLAG_FPROFILE_INSTR_GENERATE_C
HAVE_FLAG_FPROFILE_INSTR_GENERATE_C:INTERNAL=1
//Test HAVE_FLAG_FPROFILE_INSTR_GENERATE_CXX
HAVE_FLAG_FPROFILE_INSTR_GENERATE_CXX:INTERNAL=1
//Test HAVE_FLAG_FSANITIZE_ADDRESS_C
HAVE_FLAG_FSANITIZE_ADDRESS_C:INTERNAL=1
//Test HAVE_FLAG_FSANITIZE_ADDRESS_CXX
HAVE_FLAG_FSANITIZE_ADDRESS_CXX:INTERNAL=1
//Test HAVE_FLAG_FSANITIZE_ADDRESS_USE_AFTER_SCOPE_C
HAVE_FLAG_FSANITIZE_ADDRESS_USE_AFTER_SCOPE_C:INTERNAL=1
//Test HAVE_FLAG_FSANITIZE_ADDRESS_USE_AFTER_SCOPE_CXX
HAVE_FLAG_FSANITIZE_ADDRESS_USE_AFTER_SCOPE_CXX:INTERNAL=1
//Test HAVE_FLAG_FSANITIZE_FLOAT_DIVIDE_BY_ZERO_C
HAVE_FLAG_FSANITIZE_FLOAT_DIVIDE_BY_ZERO_C:INTERNAL=1
//Test HAVE_FLAG_FSANITIZE_FLOAT_DIVIDE_BY_ZERO_CXX
HAVE_FLAG_FSANITIZE_FLOAT_DIVIDE_BY_ZERO_CXX:INTERNAL=1
//Test HAVE_FLAG_FSANITIZE_IMPLICIT_CONVERSION_C
HAVE_FLAG_FSANITIZE_IMPLICIT_CONVERSION_C:INTERNAL=1
//Test HAVE_FLAG_FSANITIZE_IMPLICIT_CONVERSION_CXX
HAVE_FLAG_FSANITIZE_IMPLICIT_CONVERSION_CXX:INTERNAL=1
//Test HAVE_FLAG_FSANITIZE_LOCAL_BOUNDS_C
HAVE_FLAG_FSANITIZE_LOCAL_BOUNDS_C:INTERNAL=1
//Test HAVE_FLAG_FSANITIZE_LOCAL_BOUNDS_CXX
HAVE_FLAG_FSANITIZE_LOCAL_BOUNDS_CXX:INTERNAL=1
//Test HAVE_FLAG_FSANITIZE_NULLABILITY_C
HAVE_FLAG_FSANITIZE_NULLABILITY_C:INTERNAL=1
//Test HAVE_FLAG_FSANITIZE_NULLABILITY_CXX
HAVE_FLAG_FSANITIZE_NULLABILITY_CXX:INTERNAL=1
//Test HAVE_FLAG_FSANITIZE_RECOVER_UNSIGNED_INTEGER_OVERFLOW_C
HAVE_FLAG_FSANITIZE_RECOVER_UNSIGNED_INTEGER_OVERFLOW_C:INTERNAL=1
//Test HAVE_FLAG_FSANITIZE_RECOVER_UNSIGNED_INTEGER_OVERFLOW_CXX
HAVE_FLAG_FSANITIZE_RECOVER_UNSIGNED_INTEGER_OVERFLOW_CXX:INTERNAL=1
//Test HAVE_FLAG_FSANITIZE_UNDEFINED_C
HAVE_FLAG_FSANITIZE_UNDEFINED_C:INTERNAL=1
//Test HAVE_FLAG_FSANITIZE_UNDEFINED_CXX
HAVE_FLAG_FSANITIZE_UNDEFINED_CXX:INTERNAL=1
//Test HAVE_FLAG_FSANITIZE_UNSIGNED_INTEGER_OVERFLOW_C
HAVE_FLAG_FSANITIZE_UNSIGNED_INTEGER_OVERFLOW_C:INTERNAL=1
//Test HAVE_FLAG_FSANITIZE_UNSIGNED_INTEGER_OVERFLOW_CXX
HAVE_FLAG_FSANITIZE_UNSIGNED_INTEGER_OVERFLOW_CXX:INTERNAL=1
//Test HAVE_FLAG_FSTANDALONE_DEBUG_C
HAVE_FLAG_FSTANDALONE_DEBUG_C:INTERNAL=1
//Test HAVE_FLAG_FSTANDALONE_DEBUG_CXX
HAVE_FLAG_FSTANDALONE_DEBUG_CXX:INTERNAL=1
//Test HAVE_FLAG_WALL_C
HAVE_FLAG_WALL_C:INTERNAL=1
//Test HAVE_FLAG_WALL_CXX
HAVE_FLAG_WALL_CXX:INTERNAL=1
//Test HAVE_FLAG_WERROR_C
HAVE_FLAG_WERROR_C:INTERNAL=1
//Test HAVE_FLAG_WERROR_CXX
HAVE_FLAG_WERROR_CXX:INTERNAL=1
//Test HAVE_FLAG_WEXTRA_C
HAVE_FLAG_WEXTRA_C:INTERNAL=1
//Test HAVE_FLAG_WEXTRA_CXX
HAVE_FLAG_WEXTRA_CXX:INTERNAL=1
//Test HAVE_FLAG_WPEDANTIC_C
HAVE_FLAG_WPEDANTIC_C:INTERNAL=1
//Test HAVE_FLAG_WPEDANTIC_CXX
HAVE_FLAG_WPEDANTIC_CXX:INTERNAL=1

